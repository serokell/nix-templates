name: Nix flake check
on: push

jobs:
  validate:
    runs-on: [self-hosted, nix]
    steps:
      - uses: actions/checkout@v4

      - name: xrefcheck
        run: nix run github:serokell/xrefcheck

      - name: reuse
        run: nix build -L .#checks.x86_64-linux.reuse-lint
        # Run step even if the previous one has failed
        if: success() || failure()

      - name: hlint
        run: nix build -L .#checks.x86_64-linux.hlint
        if: success() || failure()

      - name: stylish-haskell
        run: nix build -L .#checks.x86_64-linux.stylish-haskell
        if: success() || failure()

      - name: check-trailing-whitespace
        run: nix build -L .#checks.x86_64-linux.trailing-whitespace
        if: success() || failure()

      - name: cabal-check
        run: nix build -L .#checks.x86_64-linux.cabal-check
        if: success() || failure()

      # - name: check-stack2cabal
      #   run: nix develop .#ci -c bash -c 'stack2cabal && git add -A && git diff HEAD --exit-code'
      #   if: success() || failure()

      # - name: check-hpack
      #   run: nix build -L .#checks.x86_64-linux.hpack
      #   if: success() || failure()

      # - name: shellcheck
      #   run: nix build -L .#checks.x86_64-linux.shellcheck
      #   if: success() || failure()

  # Export JSON serialized check prefixes
  # For this to work, you must uncomment inherit (ci) build-matrix in flake.nix
  check-prefixes:
    runs-on: [self-hosted, nix]
    outputs:
      matrix: ${{ steps.set-matrix.outputs.matrix }}
    steps:
    - uses: actions/checkout@v4

    - id: set-matrix
      run: echo "matrix=$(nix eval --json .#build-matrix.x86_64-linux)" >> $GITHUB_OUTPUT

  build-and-test:
    needs: check-prefixes
    name: ${{ matrix.prefix }}
    runs-on: [self-hosted, nix]
    strategy:
      fail-fast: false
      matrix: ${{fromJson(needs.check-prefixes.outputs.matrix)}}

    steps:
      - uses: actions/checkout@v4

      - name: build
        run: nix build -L .#checks.x86_64-linux.${{ matrix.prefix }}:build-all --keep-going

      - name: test
        run: nix build -L .#checks.x86_64-linux.${{ matrix.prefix }}:test-all --keep-going
        if: success() || failure()
